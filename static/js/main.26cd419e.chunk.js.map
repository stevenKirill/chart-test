{"version":3,"sources":["Input/Input.js","Form/Form.js","Header/Header.js","Row/Row.js","Table/Table.js","App.js","index.js"],"names":["Input","type","style","label","value","onChange","placeholder","isError","className","border","undefined","initialFormValues","name","city","birthDate","job","isValid","_key","Form","onAdd","width","marginTop","padding","useState","formValues","setFormsValues","errors","setErrors","setError","prev","setValues","onSubmit","event","preventDefault","formKeys","Object","keys","forEach","key","validateForm","every","map","target","renderInput","Header","getStyle","string","background","Row","id","removeItem","editItem","view","setView","onClick","bind","onCancel","onSave","item","RowEdit","Table","data","info","generateId","Math","floor","random","App","JSON","parse","localStorage","getItem","setData","useEffect","setItem","stringify","prevData","filter","x","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.26cd419e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Input.css';\r\nexport function Input({ type, style, label, value, onChange, placeholder, isError }) {\r\n    return (\r\n        <div className=\"input\">\r\n            <label className=\"input__label\">{label}</label>\r\n            <input\r\n            className=\"form-control\"\r\n            type={type} \r\n            value={value}\r\n            style={{ ...style, border: isError ? '2px solid red' : undefined}}\r\n            onChange={onChange}\r\n            placeholder={placeholder}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Input } from '../Input/Input'\r\nimport './Form.css';\r\n\r\n\r\nconst initialFormValues = {\r\n    name: '',\r\n    city: '',\r\n    birthDate: '',\r\n    job: ''\r\n};\r\n\r\nconst isValid = (_key, value) => {\r\n    if (value === '') {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function Form({ onAdd }) {\r\n    const style = {\r\n        width: '300px',\r\n        marginTop: '15px',\r\n        padding: '10px'\r\n    };\r\n\r\n    const [formValues, setFormsValues] = useState(initialFormValues);\r\n    const [errors, setErrors] = useState(initialFormValues);\r\n\r\n    const setError = (name, value) => {\r\n        setErrors((prev) => ({...prev, [name]: value}))\r\n    };\r\n\r\n    const setValues = (name) => {\r\n        return function(value) {\r\n            setFormsValues((prev) => ({...prev, [name]: value}))\r\n            setError(name, null);\r\n        }\r\n    };\r\n\r\n\r\n    const validateForm = (key, value) => {\r\n        setError(key, !isValid(key, value));\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const formKeys = Object.keys(initialFormValues);\r\n        \r\n        formKeys.forEach(key => validateForm(key, formValues[key]));\r\n        \r\n        if (formKeys.every(key => isValid(key, formValues[key]))) {\r\n            onAdd(formValues);\r\n            setFormsValues(initialFormValues);\r\n        }\r\n    }\r\n\r\n    const renderInput = (name, label, placeholder, type = 'text') => {\r\n        return (\r\n            <Input\r\n                type={type}\r\n                style={style}\r\n                label={label}\r\n                placeholder={placeholder}\r\n                isError={errors[name]}\r\n                value={formValues[name]}\r\n                onChange={(event) => setValues(name)(event.target.value)}\r\n            />\r\n        );\r\n    }\r\n\r\n    const inputs = [\r\n        {\r\n            name: 'name',\r\n            label: 'Name',\r\n            placeholder: 'type your name',\r\n        },\r\n        {\r\n            name: 'city',\r\n            label: 'City',\r\n            placeholder: 'type your city',\r\n        },\r\n        {\r\n            name: 'birthDate',\r\n            label: 'Birth date',\r\n            placeholder: 'choose your birthDate',\r\n            type: 'date',\r\n        },\r\n        {\r\n            name: 'job',\r\n            label: 'Job',\r\n            placeholder: 'type your job',\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <form className=\"form\" onSubmit={handleSubmit}>\r\n            {inputs.map(({ name, label, placeholder, type }) => renderInput(name, label, placeholder, type))}\r\n            <button className=\"btn btn-outline-dark form__button\">Add person</button>\r\n        </form>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport function Header () {\r\n    return (\r\n        <tr className=\"header\">\r\n            <th className=\"header__name\">Name</th>\r\n            <th className=\"header__city\">City</th>\r\n            <th className=\"header__job\">Job</th>\r\n            <th className=\"header__birth\">Birth place</th>\r\n            <th className=\"header__birth\">Editing</th>\r\n        </tr>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport './Row.css';\r\nconst getStyle = string => ({background: string === '' ? '#DC3545' : undefined});\r\n\r\nexport const Row = ({name, city, birthDate, job, id, removeItem, editItem}) => {\r\n\r\n    const [view,setView] = useState(true);\r\n\r\n    const handleCancel = () => {\r\n        setView(true);\r\n    }\r\n\r\n    const handleSave = (item) => {\r\n        editItem({...item, id})\r\n        setView(true);\r\n    }\r\n\r\n    if (view) {\r\n        return (\r\n            <tr className=\"table__row\">\r\n                <th className=\"table__name\" style={getStyle(name)}>{name}</th>\r\n                <th className=\"table__city\" style={getStyle(city)}>{city}</th>\r\n                <th className=\"table__job\" style={getStyle(job)}>{job}</th>\r\n                <th className=\"table__birth\" style={getStyle(birthDate)}>{birthDate}</th>\r\n                <th className=\"table__buttons\">\r\n                    <button className=\"btn btn-danger mr-3\" onClick={removeItem.bind(null,id)}>X</button>\r\n                    <button className=\"btn btn-primary\" onClick={() => setView(false)}>Edit</button>\r\n                </th>\r\n            </tr>\r\n        )\r\n    } \r\n    return (\r\n        <RowEdit name={name} city={city} birthDate={birthDate} job={job} onCancel={handleCancel} onSave={handleSave}/>\r\n    )\r\n}\r\n\r\nconst RowEdit = ({name, city, birthDate, job, onSave, onCancel}) => {\r\n    const [formValues, setFormsValues] = useState({name,city,birthDate,job});\r\n\r\n    const setValues = (name) => {\r\n        return function(event) {\r\n            const {value} = event.target;\r\n            setFormsValues((prev) => ({...prev, [name]: value}))\r\n        }\r\n    };\r\n\r\n    return (\r\n        <tr className=\"table__row__extra\">\r\n            <th className=\"table__name\"><input value={formValues.name} onChange={setValues('name')} className=\"input-group form-control\"/></th>\r\n            <th className=\"table__city\"><input value={formValues.city} onChange={setValues('city')} className=\"input-group form-control\"/></th>\r\n            <th className=\"table__job\"><input value={formValues.job} onChange={setValues('job')} className=\"input-group form-control\" /></th>\r\n            <th className=\"table__birth\"><input value={formValues.birthDate} onChange={setValues('birthDate')} className=\"input-group form-control\"/></th>\r\n            <th className=\"table__buttonsEdit\">\r\n                <button className=\"btn btn-danger mr-3\" onClick={() => onSave(formValues)}>Save</button>\r\n                <button className=\"btn btn-primary\" onClick={onCancel}>Cancel</button>\r\n            </th>\r\n        </tr>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Header } from '../Header/Header';\r\nimport './Table.css';\r\nimport { Row } from '../Row/Row';\r\n\r\nexport function Table({ data,  removeItem, editItem}) {\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <Header/>\r\n            {data.map((info) => <Row {...info} removeItem={removeItem} editItem={editItem}/>)}\r\n        </table>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Form } from './Form/Form';\nimport { Table } from './Table/Table';\n\nconst generateId = () =>  Math.floor(Math.random() * (100 - 1) + 1);\n\nfunction App() {\n  const [data,setData] = useState(() => {\n    try {\n      const row = JSON.parse(localStorage.getItem('row'));\n      return row || [];\n    } catch {\n      return [];\n    }\n\n  });\n\n  useEffect(() => {\n    localStorage.setItem('row',JSON.stringify(data));\n  },[data])\n  const handleAdd = (item) => {\n        setData((prevData) => [...prevData, {...item, id: generateId()}])\n  }\n\n  const removeItem = (id) => {\n    setData((prevData) => prevData.filter(x => x.id != id))\n}\n\nconst editItem = (item) => {\n    setData((prevData) => prevData.map((element) => element.id === item.id ? item : element))\n}\n\n  return (\n    <div className=\"wrapper\">\n      <Table data={data} removeItem={removeItem} editItem={editItem}/>\n      <Form onAdd={handleAdd}/>\n    </div>\n  )\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}